sudo apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release \
    software-properties-common \
    python3-pip \
    protobuf-compiler


pip3 install confluent-kafka protobuf requests

awk 'NF {sub(/\r/, ""); printf "%s\\\\n",$0;}' rsa_key.pem


# Create the properly formatted private key for JSON
FORMATTED_KEY=$(awk 'NF {sub(/\r/, ""); printf "%s\\\\n",$0;}' keys/rsa_key.pem)

sudo apt-get install -y jq

# Use jq to update the JSON config file
jq --arg key "$FORMATTED_KEY" '.config["snowflake.private.key"] = $key' config/snowflake-connector-config.json > config/snowflake-connector-config.json.new && mv config/snowflake-connector-config.json.new config/snowflake-connector-config.json

mkdir -p ./logs/zookeeper/data ./logs/zookeeper/log ./logs/kafka
chmod -R 777 ./logs


docker exec kafka kafka-topics --delete --topic topic1 --bootstrap-server kafka:29092

protoc --python_out=. --experimental_allow_proto3_optional proto/sample.proto

curl https://github.com/protocolbuffers/protobuf/releases/download/v3.19.4/protoc-3.19.4-linux-x86_64.zip >> protoc-3.19.zip
mkdir protoc-temp
unzip protoc-3.19.zip -d protoc-temp


python3 -m venv env
source env/bin/activate


mv /usr/bin/protoc /usr/bin/protoc-old
cp ./scripts/protoc-temp/bin/protoc /usr/bin/protoc


grep -v "KEY\|CERT" <cert>.pem | awk 'NF {sub(/\r/, ""); printf "%s",$0;}'


# Alternative deployment using docker exec
docker exec connect curl -X POST -H "Content-Type: application/json" \
  --data @/etc/kafka-connect/config/snowflake-connector-config.json \
  http://localhost:8083/connectors
